@model FreeLance.Controllers.ProblemController.DetailsView
@using Microsoft.AspNet.Identity;
@{
	ViewBag.Title = "Задача";
}

@section css {
	<link rel="stylesheet" type="text/css" href="~/Content/flaticon.css">
}

<div class="row">
	<div class="col-sm-10">
		<h2>Задача</h2>
		<div class="panel panel-default">
			<div class="panel-heading">
				<table>
					<tr>
						<td width="80">
							<img src=@Model.PhotoPath height="70" width="70">
						</td>
						<td>
							<h3>@Model.EmployerName</h3>
							<i>@Model.EmployerEmail</i>
						</td>
					</tr>
				</table>
			</div>
			<div class="panel-body">
				<h2>@Model.ProblemName</h2>
				<p>@Model.ProblemShortDescription</p>
				<table class="table" style="text-align:center;">
					<tr>
						<td >
							Создано: @Model.CreatingDate
						</td>
						<td>
							<b style="font-size:20px">@Model.Cost</b>
							<span class="flaticon-ruble-big"></span>
						</td>
					</tr>
					<tr>
						<td>
							Сделать до: @Model.DeadlineDate
						</td>
						<td>
							<b style="font-size:18px">Рабочих мест: @Model.AmountOfWorkers</b>
						</td>
					</tr>
				</table>
				@if (Context.User.IsInRole("Employer") && Model.EmployerId == User.Identity.GetUserId())
				{
					<table class="table" style="text-align:center">
						<tbody>
							<tr>
								<td>
									<h4>Контракты в работе</h4>
									<table class="table table-bordered" style="text-align:center">
										@foreach (var contract in @Model.ContractsInProgress)
										{
											<tr>
												<td>
													<a href="/Freelancer/Details/@contract.FreelancerId">
														@contract.FreelancerName
													</a>
												</td>
												<td>
													<a href="/Contract/Details/@contract.ContractId">
														К контракту
													</a>
												</td>
											</tr>
										}
										@if (@Model.ContractsInProgress.Count == 0)
										{
											<tr>
												<td>
													Пока что их нет.
												</td>
											</tr>
										}
									</table>
								</td>
								<td>
									<h4>Завершенные контракты</h4>
									<table class="table table-bordered" style="text-align:center; ">
								 		@foreach (var contract in @Model.ContratsClosed)
										{
								 		<tr>
								 			<td>
								 				<a href="/Freelancer/Details/@contract.FreelancerId">
								 					@contract.FreelancerName
								 				</a>
								 			</td>
								 			<td>
								 				<a href="/Contract/Details/@contract.ContractId">
								 					К контракту
								 				</a>
								 			</td>
										 </tr>
										} 
										@if (@Model.ContratsClosed.Count == 0)
										{
											<tr>
												<td>
													Пока что их нет.
												</td>
											</tr>
										}
									</table>
								</td>
								<td>
									<h4>Подписчики</h4>
									<table class="table table-bordered" style="text-align:center; ">
										@foreach (var subscriber in @Model.Subscribers)
										{
											<tr>
												<td>
													<a href="/Freelancer/Details/@subscriber.FreelancerId">
														@subscriber.FreelancerName
													</a>
												</td>
												<td>
													@Html.ActionLink("Подписать контракт", "Create", "Contract", new
													   {
														   problemID = Model.ProblemId,
														   freelancerId = subscriber.FreelancerId
													   }, null)
												</td>
											</tr>
										}
										@if (@Model.Subscribers.Count == 0)
										{
											<tr>
												<td>
													Пока что их нет.
												</td>
											</tr>
										}
									</table>
								</td>
							</tr>
						</tbody>	
					</table>
				}
				<p>@Html.Raw(Model.ProblemFullDescription)</p>
			</div>
			<div class="panel-footer">
				@if (Context.User.IsInRole("Freelancer") && Model.IsApproved)
				{
					if (!Model.IsSubscibed)
					{
						using (Html.BeginForm("Subscribe", "Subscription", FormMethod.Post))
						{
								<input name="id" type="hidden" value="@Model.ProblemId" />
								<input type="submit" class="btn btn-success btn-lg" value="Подписаться на задачу" />
						}

					}
					else
					{
						using (Html.BeginForm("UnSubscribe", "Subscription", FormMethod.Post))
						{
								<input name="id" type="hidden" value="@Model.ProblemId" />
								<input type="submit" class="btn btn-danger btn-lg" value="Отписаться от задачи" />
						}

					}
				}
				@if (Context.User.IsInRole("Employer") && Model.EmployerId == User.Identity.GetUserId())
				{
					if (Model.Status != FreeLance.Models.ProblemStatus.Closed)
					{
						using (Html.BeginForm("ChangeStatus", "Problem", FormMethod.Post))
						{
								<input name="id" type="hidden" value="@Model.ProblemId" />
								<input name="status" type="hidden" value="@FreeLance.Models.ProblemStatus.Closed" />
								<input name="redirect" type="hidden" value="/Problem/Details/@Model.ProblemId" />
								<input type="submit" class="btn btn-danger btn-lg" value="Закрыть задачу" />
						}
					}
				}
			</div>
		</div>

		@if (User.IsInRole("Freelancer") || Model.EmployerId == User.Identity.GetUserId())
		{
			@Html.Action("ProblemChat", "Chat", new { problemId = Model.ProblemId });
		}
	</div>
</div>



