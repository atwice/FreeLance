@model FreeLance.Controllers.ProblemController.DetailsView
@{ FreeLance.Models.ProblemModels problem = Model.ProblemModels;
	bool isSubscribed = Model.IsSubscibed;}
@{
	ViewBag.Title = "Problem";
}
<div>
	<h4>Problem Info</h4>
	<hr />
	@if (!isSubscribed)
	{
		if (Context.User.IsInRole("Freelancer"))
		{
			using (Html.BeginForm("Subscribe", "Subscription", FormMethod.Post))
			{
				<input name="id" type="hidden" value="@problem.ProblemId" />
				<input style="margin-left: 80px;" type="submit" class="btn btn-success btn-lg" value="Подписаться на задачу" />
			}
		}
	}
	else
	{
		if (Context.User.IsInRole("Freelancer"))
		{
			using (Html.BeginForm("UnSubscribe", "Subscription", FormMethod.Post))
			{
				<input name="id" type="hidden" value="@problem.ProblemId" />
				<input style="margin-left: 80px;" type="submit" class="btn btn-success btn-lg" value="Отписаться от задачи" />
			}
		}
	}
	
	<dl class="dl-horizontal">
		<dt>@Html.DisplayNameFor(model => problem.Name)</dt>
		<dd>@Html.DisplayFor(model => problem.Name)</dd>

		<dt>@Html.DisplayNameFor(model => problem.Description)</dt>
		<dd>@Html.DisplayFor(model => problem.Description)</dd>

		<dt>@Html.DisplayNameFor(model => problem.Status)</dt>
		<dd>@Html.DisplayFor(model => problem.Status)</dd>
		
        <dt>@Html.DisplayNameFor(model => problem.Cost)</dt>
		<dd>@Html.DisplayFor(model => problem.Cost)</dd>
		
        <dt>@Html.DisplayNameFor(model => problem.Employer)</dt>
		<dd>@Html.DisplayFor(model => problem.Employer.Email)</dd>

        @if (Context.User.IsInRole("Employer"))
        {
		    <dt>@Html.DisplayNameFor(model => problem.Contracts)</dt>
            <td>
                if (Model.Contracts.Count() == 0)
                {
                    <dd>No contracts</dd>    
                }
                else
                {
			        @foreach (var contract in problem.Contracts)
                    {
				        @Html.ActionLink(contract.Details, "Details", "Contract", new { id = contract.ContractId }, null)
                    }
                }
		    </td>
        }

        <dt>@Html.DisplayNameFor(model => problem.Subscriptions)</dt>
        <td>
			@if (Model.Subscriptions.Count() == 0)
			{
				<dd>No subscriptions</dd>
			}
			else
			{
				foreach (var subscription in Model.Subscriptions)
				{
					<dd>
                        @Html.ActionLink(subscription.Freelancer.UserName, "Profile", "Freelancer", new { id = subscription.Freelancer.Id }, null)
					</dd>
				}
			}
        </td>

	</dl>
	<p>
		@Html.ActionLink("Back to List", "OpenProblems", "Freelancer")
	</p>
