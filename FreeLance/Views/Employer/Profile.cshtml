@model FreeLance.Controllers.EmployerController.ProfileView
@{
	ViewBag.Title = "Profile";
}

@section css {
	<style>
		.account-info-container {
			display: flex;
			flex-direction: row;
			justify-content: space-around;
		}

		.photo-container {
			display: flex;
			flex-direction: column;
			align-items: center;
		}

		.another-info-container {
			display: flex;
			flex-direction: column;
			align-items: center;
		}

		.inputfile {
			width: 0.1px;
			height: 0.1px;
			opacity: 0;
			overflow: hidden;
			position: absolute;
			z-index: -1;
		}

			.inputfile + label {
				align-self: center;
				border: solid;
				border-color: #428bca;
				border-radius: 8px;
				font-size: 14px;
				font-weight: 700;
				color: #428bca;
				background-color: white;
				display: inline-block;
				padding: 0.625rem 1.25rem;
				margin: 10px 0 10px 0;
				text-overflow: ellipsis;
			}

				.inputfile:focus + label,
				.inputfile + label:hover {
					background-color: #F8F8FF;
				}

		.image-item {
			border: 1px solid #dddddd;
			border-radius: 2px;
			padding: 2px;
			height: 100px;
			width: 100px;
		}

		.form-container {
			display: flex;
			flex-direction: column;
		}
	</style>
}



<div class="row">
	<div class="col-md-12">
		<h2>Профиль</h2>
	</div>
</div>
<div class="row">
	<div class="col-md-5">
		<div class="panel panel-default">
			<div class="panel-heading">
				<h2 class="panel-title">Моя статистика</h2>
			</div>
			<table class="table" align="center">
				<tr>
					<td>Открытых задач</td>
					<td>@Model.OpenProblemsCount</td>
				</tr>
				<tr>
					<td>Закрытых задач</td>
					<td>@Model.ClosedProblemsCount</td>
				</tr>
				<tr>
					<td>Контрактов в процессе</td>
					<td>@Model.OpenContractsCount</td>
				</tr>
				<tr>
					<td>Контрактов выполнено</td>
					<td>@Model.ClosedContractsCount</td>
				</tr>
			</table>
		</div>

	</div>
	<div class="col-md-5 ">
		<div class="panel panel-default">
			<div class="panel-heading">
				<h2 class="panel-title">Учетная запись</h2>
			</div>
			<div class="panel-body">
				<div class="account-info-container">
					<div class="photo-container">
						@{
							var imgSrc = Model.EmployerPhoto;
							if (imgSrc.IsEmpty())
							{
								imgSrc = "/Files/avatar.jpg";
							}

						}
						<img class="image-item" src="@imgSrc" alt="User photo">
						@using (Html.BeginForm("UploadPhoto", "Employer", FormMethod.Post, new { enctype = "multipart/form-data", runat = "server", @class = "form-container" }))
						{
							<input class="inputfile" type="file" accept=".jpg,.png" name="file" id="file" data-multiple-caption="{count} files selected">
							<label for="file">
								<span class="filename">Выберите файл…</span>
							</label>
							<input type="submit" value="Загрузить фото" class="btn btn-primary" />

						}
					</div>
					<div class="another-info-container">
						<p>Email: @Model.EmployerEmail</p>
						<p>
							<a href="/Manage/ChangePassword" class="btn btn-info">Сменить пароль</a>
						</p>
					</div>
				</div>
			</div>
		</div>

		<div class="panel panel-default">
			<div class="panel-heading">
				<h2 class="panel-title">Уведомления</h2>
			</div>
			<div class="panel-body">
				@using (Html.BeginForm("Settings", "Employer", FormMethod.Post))
			{
					<div class="checkbox">
						@Html.CheckBoxFor(m => m.emailNotifications.IsCommentsEnabled)
						@Html.Label("Получать уведомления о новых комментариях")
					</div>
					<div class="checkbox">
						@Html.CheckBoxFor(m => m.emailNotifications.IsContractStatusEnabled)
						@Html.Label("Получать уведомления об изменениях контракта")
					</div>
					<input type="submit" value="Сохранить" class="btn btn-success" />
			}
			</div>
		</div>
		
	</div>
</div>

<script>
	var inputs = document.querySelectorAll('.inputfile');
	Array.prototype.forEach.call(inputs, function (input) {
		var label = input.nextElementSibling,
			labelVal = label.innerHTML;

		input.addEventListener('change', function (e) {
			var fileName = '';
			if (this.files && this.files.length > 1)
				fileName = (this.getAttribute('data-multiple-caption') || '').replace('{count}', this.files.length);
			else
				fileName = e.target.value.split('\\').pop();

			if (fileName)
				label.querySelector('.filename').innerHTML = fileName;
			else
				label.innerHTML = labelVal;
		});
	});
</script>