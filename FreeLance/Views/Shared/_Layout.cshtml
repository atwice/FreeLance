<!DOCTYPE html>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")

@functions{
	public class MenuButton
	{
		public string Text { get; set; }
		public string Controller { get; set; }
		public string Action { get; set; }
		public bool IsPartialView { get; set; }
		public MenuButton(string text, string action, string controller, bool isPartialView = false)
		{
			Text = text;
			Controller = controller;
			Action = action;
			IsPartialView = isPartialView;
		}
	}

	static List<MenuButton> menuFreelancer = new List<MenuButton> {
		new MenuButton("Профиль", "Profile", "Freelancer"),
		new MenuButton("Личный кабинет", "Home", "Freelancer"),
		new MenuButton("Биржа", "OpenProblems", "Freelancer" ),
		new MenuButton("Архив", "Archive", "Freelancer"),
		new MenuButton("Документы", "Documents", "Freelancer"),
        new MenuButton("Настройки", "Settings", "Freelancer")
	};
	static List<MenuButton> menuEmployer = new List<MenuButton> {
		new MenuButton("Личный кабинет", "Home", "Employer"),
		new MenuButton("Биржа", "OpenProblems", "Freelancer"),
		new MenuButton("Архив контрактов", "Archive", "Employer"),
		new MenuButton("Исполнители", "Freelancers", "Employer"),
        new MenuButton("Профиль", "Profile", "Employer")
	};
	static List<MenuButton> menuCoordinator = new List<MenuButton> {
		new MenuButton("Личный кабинет", "Home", "Coordinator"),
		new MenuButton("Биржа", "OpenProblems", "Freelancer"),
		new MenuButton("Исполнители", "Freelancers", "Coordinator"),
		new MenuButton("Работодатели", "Employers", "Coordinator"),
		new MenuButton("Юрлица", "LawFaces", "Coordinator")//,
		//new MenuButton("Загрузить ГПХ", "Upload", "Coordinator"),
		//new MenuButton("Заполнить шаблон ГПХ", "FillLawContractTemplate", "Coordinator", true),
        //new MenuButton("Настройки", "Settings", "Coordinator")
	};

	Dictionary<string, List<MenuButton>> menuDict = new Dictionary<string, List<MenuButton>> {
		{ "Freelancer", menuFreelancer },
		{ "Employer", menuEmployer },
		{ "Coordinator", menuCoordinator }
	};
}

@{
	var controller = ViewContext.RouteData.GetRequiredString("controller");
	var action = ViewContext.RouteData.GetRequiredString("action");
}

<html>
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>FreeLance - @ViewBag.Title</title>
	<script src="//tinymce.cachefly.net/4.2/tinymce.min.js"></script>
	<script>tinymce.init({ selector: "#Description" });</script>
	@Styles.Render("~/Content/css")
	@Scripts.Render("~/bundles/modernizr")

	@RenderSection("css", false)
	@RenderSection("PageScripts", false)
	<script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>
</head>
<body>
	<div class="navbar navbar-inverse navbar-fixed-top"> @*@navbar-inverse navbar-fixed-top*@
		<div class="container">
			<div class="navbar-header">
				@Html.ActionLink("FreeLance", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
			</div>
			<div class="navbar-collapse collapse">
				<ul class="nav navbar-nav">
					<li>@Html.ActionLink("Home", "Index", "Home")</li>
				</ul>
				@Html.Partial("_LoginPartial")
			</div>
		</div>
	</div>
	<div class="container-fluid body-content">
		<div class="row">
			<div class="col-md-2">
				<div class="container-fluid" style="margin-top:10%">


					@if (User.IsInRole("Incognito"))
					{
					<div class="alert alert-block">
						<p>
							<span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
							Ваш аккаунт находится на рассмотрении координатора.
						</p>
						<p>В это время Вы можете загрузить пакет документов, чтобы иметь возможность подписываться на задачи сразу после одобрения аккаунта.</p>
					</div>
					}
					else
					{
					<div class="span3 bs-docs-sidebar">
						<ul class="nav nav-pills nav-stacked main-menu">
							@foreach (var role in menuDict)
							{
								if (Context.User.IsInRole(role.Key))
								{
									foreach (MenuButton button in role.Value)
									{
										bool isActive = controller == button.Controller && action == button.Action;
										string liClass = "menu-button " + (isActive ? "active" : "");
										if (button.IsPartialView)
										{
										<li class="@liClass" id="menu-button-@button.Action-@button.Controller">
											@Ajax.ActionLink(button.Text, button.Action, button.Controller,
									new AjaxOptions
									{
										UpdateTargetId = "layout-body",
										OnComplete = "onMenuButtonClick(\"" + button.Action + "\", \"" + button.Controller + "\");"
									})
										</li>
										}
										else
										{
										<li class="@liClass" id="menu-button-@button.Action-@button.Controller">
											@Html.ActionLink(button.Text, button.Action, button.Controller, null,
									new { onclick = "onMenuButtonClick(\"" + button.Action + "\", \"" + button.Controller + "\");" })
										</li>
										}
									}
								}
							}
						</ul>
					</div>
					}

				</div>
			</div>
			<div class="col-md-10">
				<!--
				@if (ViewBag.ErrorMessage != null)
				{
				<div id="message">
					<div style="padding: 5px;">
						<div id="inner-message" class="alert alert-error">
							<button type="button" class="close" data-dismiss="alert">&times;</button>
							<h4><font color="red">@ViewBag.ErrorMessage</font></h4>
						</div>
					</div>
				</div>
				}
				-->
				@Html.Action("GetViewBagNotifications", "Notification", new { ViewBag = ViewBag })
				<div id="notifications"></div>
				<div id="layout-body">
					@RenderBody()
				</div>
			</div>
		</div>

		<hr />
		<footer>
			<p>FreeLance - Корпоративный аутсорсинг</p>
		</footer>
	</div>

	@RenderSection("scripts", required: false)
	<script type="text/javascript">

		function updateNotifications() {
			$.ajax({
				url: '@Url.Action("GetPageNotifications", "Notification")',
				type: 'POST',
				data: { "action": "@action", "controller": "@controller" },
				dataType: "html",
				success: function (result) {
					$("#notifications").html(result);
				}
			});
		}

		function onMenuButtonClick(action, controller) {
			var x = document.getElementsByClassName("menu-button");
			for(var i = 0; i < x.length; i++) {
				x[i].className = "menu-button-" + action + "-" + controller == x[i].id ? "menu-button active" : "menu-button";
			}
			updateNotifications();
		}

		$(function () {
			updateNotifications();
		});

	</script>
</body>
</html>
