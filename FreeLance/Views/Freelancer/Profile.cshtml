@model FreeLance.Controllers.FreelancerController.DocumentPackageViewModel

@{
    ViewBag.Title = "Профиль";
	ViewBag.MenuPick = "Profile";
}
<h2>Профиль</h2>
<p> <strong>Электронная почта: </strong>
    @{  if (Context.User.Identity.IsAuthenticated)
            {
            @User.Identity.Name
        }
        else
        {
            @Html.Display("You are not registered!");
            }
    }
</p>

<p> <strong>Всего подписок: </strong> @ViewBag.subscriptionsSize </p>
<p> <strong>Всего контрактов: </strong> @ViewBag.contractsSize</p>

    @using (Html.BeginForm("UploadPassportFace", "Freelancer", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        if (Model.PassportFace)
        {
            <span class="btn btn-default btn-file"> Паспорт загружен <input type="file" name="file" id="file"> </span>
            <input type="submit" value="Отправить" class="btn btn-success" />
        }
        else
        {
            <span class="btn btn-default btn-file"> Отправить паспорт <input type="file" name="file" id="file"> </span>
            <input type="submit" value="Отправить" class="btn btn-primary" />
        }
    }

    @using (Html.BeginForm("UploadPassportRegistration", "Freelancer", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        if (Model.PassportRegistration)
        {
            <span class="btn btn-default btn-file"> Регистрация загружена <input type="file" name="file" id="file"> </span>
            <input type="submit" value="Отправить" class="btn btn-success" />
        }
        else
        {
            <span class="btn btn-default btn-file"> Отправить регистрацию <input type="file" name="file" id="file"> </span>
            <input type="submit" value="Отправить" class="btn btn-primary" />
        }
    }

@using (Html.BeginForm("CreateDocumentTextFields", "Freelancer"))
{
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Phone, "Телефон", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Adress, "Адрес", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PaymentDetails, "Реквизиты", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PaymentDetails, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PaymentDetails, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-success" />
                <a href="@Url.Action("CreateDocumentTextFields", "Freelancer")">
                    <input type="button" value="Отмена" class="btn btn-danger" />
                </a>
            </div>
        </div>
        @Html.ActionLink("Заполнить ГПХ", "FillLawContract", "Freelancer")
    </div>
}
