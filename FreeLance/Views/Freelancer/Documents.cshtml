@model FreeLance.Controllers.FreelancerController.DocumentPackageViewModel
@{
    ViewBag.Title = "Documents";
}

@section css {
	<style>
		.success-text {
			align-self: center;
			font-size: 14px;
			font-weight: 700;
			color: #428bca;
			margin-right: 20px;
			border: solid;
			border-color: #428bca;
			border-radius: 8px;
			padding: 0.625rem 1.25rem;
		}

		.form-container {
			display: flex;
			flex-direction: column;
			margin-right: 20px;
			justify-content: center;
		}

		.container-documents {
			display: flex;
			flex-direction: row;
			justify-content: flex-start
		}
	</style>
}



<h2>Документы</h2>
<div class="row">
	<div class="col-md-6">
		<div class="container-documents">
			@if (Model.Photos.PassportFace != null)
			{
				<span class="success-text">Паспорт загружен</span>
			}
			else
			{
				using (Html.BeginForm("UploadPassportFace", "Freelancer", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-container" }))
				{

					<input class="inputfile" type="file" accept=".jpg,.png" name="file" id="file-1" data-multiple-caption="{count} files selected">
					<label for="file-1">
						<span class="filename">Выберите файл…</span>
					</label>
					<input type="submit" value="Отправить паспорт" class="btn btn-primary" />
				}
			}
			@if (Model.Photos.PassportRegistration != null)
			{
				<span class="success-text"> Регистрация загружена </span>
			}
			else
			{
				using (Html.BeginForm("UploadPassportRegistration", "Freelancer", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-container" }))
				{
					<input class="inputfile" type="file" accept=".jpg,.png" name="file" id="file-2" data-multiple-caption="{count} files selected">
					<label for="file-2">
						<span class="filename">Выберите файл…</span>
					</label>
					<input type="submit" value="Отправить регистрацию" class="btn btn-primary" />
				}
			}

		</div>
	</div>
</div>


@using (Html.BeginForm("CreateDocumentTextFields", "Freelancer"))
{
    <div class="form-horizontal">
        <hr/>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <h3> Общая информация </h3>

        <!-- GENERAL-->
        <div class="form-group">
            @Html.LabelFor(model => model.General.Name, "Имя", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.General.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.General.Name, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.General.Surname, "Фамилия", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.General.Surname, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.General.Surname, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.General.MiddleName, "Отчество", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.General.MiddleName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.General.MiddleName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.General.Email, "Почта", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.General.Email, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.General.Email, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.General.Phone, "Телефон", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.General.Phone, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.General.Phone, "", new {@class = "text-danger"})
            </div>
        </div>

        <!-- PASSPORT -->
        <h3> Паспортные данные </h3>

        <div class="form-group">
            @Html.LabelFor(model => model.Passport.SerialNumber, "Серия и номер", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Passport.SerialNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Passport.SerialNumber, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Passport.Date, "Дата выдачи", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Passport.Date, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Passport.Date, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Passport.Address, "Адрес", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Passport.Address, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Passport.Address, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Passport.OfficeName, "Кем выдан", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Passport.OfficeName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Passport.OfficeName, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Passport.OfficeCode, "Код подразделения", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Passport.OfficeCode, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Passport.OfficeCode, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Passport.BirthDate, "Дата рождения", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Passport.BirthDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Passport.BirthDate, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Passport.BirthPlace, "Место рождения", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Passport.BirthPlace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Passport.BirthPlace, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- BANK -->
        <h3> Банковские реквизиты </h3>

        <div class="form-group">
            @Html.LabelFor(model => model.Bank.Account, "Лицевой счет", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bank.Account, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Bank.Account, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Bank.BIC, "БИК", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bank.BIC, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Bank.BIC, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Bank.CorrespondentAccount, "Корсчет", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bank.CorrespondentAccount, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Bank.CorrespondentAccount, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Bank.PC, "Р/С", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bank.PC, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Bank.PC, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-success" />
                <a href="@Url.Action("CreateDocumentTextFields", "Freelancer")">
                    <input type="button" value="Отмена" class="btn btn-danger" />
                </a>
            </div>
        </div>
    </div>
}

